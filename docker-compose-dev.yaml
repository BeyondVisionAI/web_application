version: "3.7"

services:
  client_web:
    depends_on:
      - "server"
    build:
      context: ./Frontend
      dockerfile: ./DockerfileDev
    ports:
      - "80:80"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - PORT=80
    volumes:
      - ./Frontend/src:/src/
      - ./Frontend/public:/public/
    networks:
      - api
    restart: on-failure

  server:
    depends_on:
      - "mongodb"
    build:
      context: ./Backend/
      dockerfile: ./DockerfileDev
    ports:
      - "8080:8080"
    volumes:
      - ./Backend/app.js:/app/app.js
    networks:
      - api
      - bdd
    restart: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    volumes:
        - ./.docker/mongodb/data/db/:/data/db/
        - ./.docker/mongodb/data/log/:/var/log/mongodb/
        - ./.docker/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bdd
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=beyondvision
      - MONGO_INITDB_USERNAME=root
      - MONGO_INITDB_PASSWORD=root
    ports:
        - "27017:27017"
    restart: on-failure

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    volumes:
      - ./.docker/mongo-express/docker-entrypoint.sh:/docker-entrypoint.sh
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    restart: on-failure
    networks:
      - bdd

networks:
  api:
  bdd:
