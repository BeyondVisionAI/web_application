version: "3.7"

services:
  client_web:
    depends_on:
      - "server"
    build:
      context: ./Frontend
      dockerfile: ./DockerFileProd
    ports:
      - 80:80
    environment:
      - NODE_ENV=production
      - PORT=80
    networks:
      - api
    restart: on-failure

  server:
    depends_on:
      - "mongodb"
    build:
      context: ./Backend/
      dockerfile: ./DockerfileProd
    ports:
      - "8080:8080"
    networks:
      - api
      - bdd
    restart: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    volumes:
        - ./.docker/mongodb/data/db/:/data/db/
        - ./.docker/mongodb/data/log/:/var/log/mongodb/
        - ./.docker/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    env_file:
        - .env
    networks:
      - bdd
    environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
        MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
    ports:
        - "27017:27017"
    restart: on-failure

networks:
  api:
  bdd:
